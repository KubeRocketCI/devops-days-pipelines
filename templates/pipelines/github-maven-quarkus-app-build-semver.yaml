apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  labels:
    app.edp.epam.com/pipelinetype: build
    app.edp.epam.com/triggertemplate: github-build-template
  name: github-maven-quarkus-app-build-semver
spec:
  description: >-
    The Build pipeline for building java21 application with Maven (EDP
    versioning)
  finally:
    - name: update-cbb
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)
        - name: CURRENT_BUILD_NUMBER
          value: $(tasks.get-version.results.BUILD_ID)
      taskRef:
        kind: Task
        name: update-cbb
      when:
        - input: $(tasks.status)
          operator: in
          values:
            - Succeeded
    - name: push-to-jira
      params:
        - name: TICKET_NAME_PATTERN
          value: $(params.TICKET_NAME_PATTERN)
        - name: COMMIT_MESSAGE
          value: $(params.COMMIT_MESSAGE)
        - name: COMMIT_ID
          value: $(tasks.fetch-repository.results.commit)
        - name: JIRA_ISSUE_METADATA_PAYLOAD
          value: $(params.JIRA_ISSUE_METADATA_PAYLOAD)
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: VCS_TAG
          value: $(tasks.get-version.results.VCS_TAG)
        - name: VERSION
          value: $(tasks.get-version.results.VERSION)
        - name: GIT_URL
          value: $(params.git-source-url)
      taskRef:
        kind: Task
        name: push-to-jira
      when:
        - input: $(tasks.status)
          operator: in
          values:
            - Succeeded
        - input: $(params.JIRA_SERVER)
          operator: notin
          values:
            - ''
    - name: github-set-success-status
      params:
        - name: REPO_FULL_NAME
          value: $(params.gitfullrepositoryname)
        - name: DESCRIPTION
          value: Pipeline (PASSED)
        - name: STATE
          value: success
        - name: CONTEXT
          value: Build Pipeline
        - name: AUTH_TYPE
          value: Token
        - name: GITHUB_TOKEN_SECRET_NAME
          value: ci-github
        - name: GITHUB_TOKEN_SECRET_KEY
          value: token
        - name: SHA
          value: $(params.gitsha)
        - name: TARGET_URL
          value: $(params.pipelineUrl)
      taskRef:
        kind: Task
        name: github-set-status
      when:
        - input: $(tasks.status)
          operator: in
          values:
            - Succeeded
        - input: $(params.gitsha)
          operator: notin
          values:
            - $(tt.params.gitsha)
    - name: github-set-failure-status
      params:
        - name: REPO_FULL_NAME
          value: $(params.gitfullrepositoryname)
        - name: DESCRIPTION
          value: Pipeline (FAILED)
        - name: STATE
          value: failure
        - name: CONTEXT
          value: Build Pipeline
        - name: AUTH_TYPE
          value: Token
        - name: GITHUB_TOKEN_SECRET_NAME
          value: ci-github
        - name: GITHUB_TOKEN_SECRET_KEY
          value: token
        - name: SHA
          value: $(params.gitsha)
        - name: TARGET_URL
          value: $(params.pipelineUrl)
      taskRef:
        kind: Task
        name: github-set-status
      when:
        - input: $(tasks.status)
          operator: in
          values:
            - Failed
        - input: $(params.gitsha)
          operator: notin
          values:
            - $(tt.params.gitsha)
  params:
    - default: >-
        https://portal-{{ $.Release.Namespace }}.{{ $.Values.dnsWildCard }}/c/main/pipelines/pipelineruns/$(context.pipelineRun.namespace)/$(context.pipelineRun.name)
      name: pipelineUrl
      type: string
    - default: https://github.com/sergk/spring-petclinic
      description: git url to clone
      name: git-source-url
      type: string
    - default: edp
      description: git revision to checkout (branch, tag, sha, refâ€¦)
      name: git-source-revision
      type: string
    - default: java21-maven
      description: Project name
      name: CODEBASE_NAME
      type: string
    - description: Codebasebranch name
      name: CODEBASEBRANCH_NAME
      type: string
    - default: ''
      description: Change number from Merge Request
      name: changeNumber
      type: string
    - default: docker.io/maven:3.9.9-eclipse-temurin-21
      description: maven image version
      name: image
      type: string
    - description: commit sha
      name: gitsha
      type: string
    - description: repository full name
      name: gitfullrepositoryname
      type: string
    - default: docker.io/maven:3.9.9-eclipse-temurin-21
      description: sonar image version
      name: sonar_image
      type: string
    - default: ''
      description: Ticket name pattern
      name: TICKET_NAME_PATTERN
      type: string
    - default: ''
      description: Pattern to validate a commit message
      name: COMMIT_MESSAGE_PATTERN
      type: string
    - default: ''
      description: Commit message
      name: COMMIT_MESSAGE
      type: string
    - default: ''
      description: Jira Payload
      name: JIRA_ISSUE_METADATA_PAYLOAD
      type: string
    - default: ''
      description: Jira server name
      name: JIRA_SERVER
      type: string
  results:
    - description: VCS tag
      name: VCS_TAG
      type: string
      value: $(tasks.get-version.results.VCS_TAG)
  tasks:
    - name: github-set-pending-status
      params:
        - name: REPO_FULL_NAME
          value: $(params.gitfullrepositoryname)
        - name: DESCRIPTION
          value: Pipeline (IN PROGRESS)
        - name: STATE
          value: pending
        - name: CONTEXT
          value: Build Pipeline
        - name: AUTH_TYPE
          value: Token
        - name: GITHUB_TOKEN_SECRET_NAME
          value: ci-github
        - name: GITHUB_TOKEN_SECRET_KEY
          value: token
        - name: SHA
          value: $(params.gitsha)
        - name: TARGET_URL
          value: $(params.pipelineUrl)
      taskRef:
        kind: Task
        name: github-set-status
      when:
        - input: $(params.gitsha)
          operator: notin
          values:
            - $(tt.params.gitsha)
    - name: fetch-repository
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
        - name: subdirectory
          value: source
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds
    - name: init-values
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: init-values
    - name: get-version
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)
      runAfter:
        - init-values
      taskRef:
        kind: Task
        name: get-version-edp
    - name: get-cache
      params:
        - name: CACHE_NAME
          value: $(params.CODEBASE_NAME)
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: get-cache
      workspaces:
        - name: cache
          subPath: cache
          workspace: shared-workspace
    - name: update-build-number
      params:
        - name: MAVEN_IMAGE
          value: $(params.image)
        - name: GOALS
          value:
            - '-B'
            - versions:set
            - versions:commit
            - '-DnewVersion=$(tasks.get-version.results.VERSION)'
      runAfter:
        - get-version
        - get-cache
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: get-maven-module
      runAfter:
        - init-values
      taskRef:
        kind: Task
        name: get-maven-module
      workspaces:
        - name: source
          subPath: source
          workspace: shared-workspace
    - name: compile
      params:
        - name: MAVEN_IMAGE
          value: $(params.image)
        - name: GOALS
          value:
            - '-B'
            - compile
      runAfter:
        - get-cache
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: test
      params:
        - name: MAVEN_IMAGE
          value: $(params.image)
        - name: GOALS
          value:
            - '-B'
            - org.jacoco:jacoco-maven-plugin:prepare-agent
            - '-Dmaven.test.failure.ignore=true'
            - verify
            - org.jacoco:jacoco-maven-plugin:report
      runAfter:
        - compile
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: sonar
      params:
        - name: SONAR_PROJECT_KEY
          value: $(params.CODEBASE_NAME)
        - name: SONAR_PROJECT_NAME
          value: $(params.CODEBASE_NAME)
        - name: MAVEN_IMAGE
          value: $(params.sonar_image)
        - name: EXTRA_COMMANDS
          value:
            - '-B'
            - '-Dsonar.projectKey=$(params.CODEBASE_NAME)'
            - '-Dsonar.projectName=$(params.CODEBASE_NAME)'
            - '-Dsonar.branch.name=$(params.git-source-revision)'
            - '-Dsonar.qualitygate.wait=true'
            - verify
            - sonar:sonar
      runAfter:
        - test
      taskRef:
        kind: Task
        name: sonarqube-maven
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: build
      params:
        - name: MAVEN_IMAGE
          value: $(params.image)
        - name: GOALS
          value:
            - '-B'
            - clean
            - package
            - '-DskipTests=true'
      runAfter:
        - sonar
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: push
      params:
        - name: MAVEN_IMAGE
          value: $(params.image)
        - name: GOALS
          value:
            - '-B'
            - deploy
            - '-DskipTests=true'
      runAfter:
        - build
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: kaniko-build
      params:
        - name: codebase-name
          value: $(params.CODEBASE_NAME)
        - name: image-tag
          value: $(tasks.get-version.results.IS_TAG)
        - name: image-tar
          value: $(params.CODEBASE_NAME)_$(tasks.get-version.results.IS_TAG)
        - name: context
          value: $(tasks.get-maven-module.results.DEPLOYABLE_MODULE_DIR)
      runAfter:
        - get-maven-module
        - push
        - build
      taskRef:
        kind: Task
        name: kaniko
      workspaces:
        - name: source
          subPath: source
          workspace: shared-workspace
    - name: save-cache
      params:
        - name: CACHE_NAME
          value: $(params.CODEBASE_NAME)
      runAfter:
        - build
      taskRef:
        kind: Task
        name: save-cache
      workspaces:
        - name: cache
          subPath: cache
          workspace: shared-workspace
    - name: git-tag
      params:
        - name: GIT_USER_EMAIL
          value: edp-ci@edp.ci-user
        - name: GIT_USER_NAME
          value: edp-ci
        - name: GIT_SCRIPT
          value: >
            git tag -a "$(tasks.get-version.results.VCS_TAG)" -m "Tag is added
            automatically by CI user"

            git push --tags
      runAfter:
        - kaniko-build
      taskRef:
        kind: Task
        name: git-cli
      workspaces:
        - name: source
          subPath: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds
    - name: update-cbis
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)
        - name: IMAGE_TAG
          value: $(tasks.get-version.results.IS_TAG)
      runAfter:
        - git-tag
      taskRef:
        kind: Task
        name: update-cbis
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
